{"version":3,"sources":["assets/icons/restart.svg","assets/icons/help.svg","assets/icons/sick.svg","assets/icons/menu.svg","assets/icons/clear.svg","assets/icons/mask.svg","components/restartConfirm/restartConfirm.js","components/help/help.js","components/menu/menu.js","components/screeningQuestions/screeningQuestions.js","components/resultSick/resultSick.js","components/screeningQuestions/questionTwo.js","components/screeningQuestions/questionThree.js","components/screeningQuestions/questionFour.js","components/resultClear/resultClear.js","components/SickFinished/SickFinished.js","components/disclaimer/disclaimer.js","components/navigationBar/navigationBar.js","components/Greeting.js","components/startScreen/start.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","restartConfirm","className","src","restartIcon","alt","to","style","margin","helpScreen","HelpIcon","class","StartScreen","href","ScreeningQuestions","ResultSick","SickIcon","QuestionOne","QuestionThree","ClearScreening","ClearIcon","Disclaimer","NavigationBar","RestartIcon","MenuIcon","component","RestartConfirm","path","Help","Menu","PositiveResult","QuestionTwo","QuestionFour","SickFinished","Greeting","hour","Date","getHours","maskIcon","App","Start","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+HAAAA,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,uBCA3CD,EAAOC,QAAU,IAA0B,kC,iBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,yWCuB5BC,G,MAjBQ,WACnB,OACI,yBAAKC,UAAU,wBACX,yBAAKC,IAAKC,IAAaC,IAAI,iBAC3B,iEACA,oHACA,kBAAC,IAAD,CAAMC,GAAG,KACT,4BAAQJ,UAAU,cAAlB,gBAGA,kBAAC,IAAD,CAAMI,GAAG,IAAIJ,UAAU,aAAaK,MAAO,CAACC,OAAQ,KAApD,eCWGC,G,MAfI,WACf,OACI,yBAAKP,UAAU,iBACX,yBAAKC,IAAKO,IAAUL,IAAI,cACxB,oDAEA,yBAAKH,UAAU,eACX,4BAAQS,MAAM,cAAd,mBACA,4BAAQA,MAAM,cAAd,oCACA,4BAAQT,UAAU,cAAlB,sBCJDU,G,MAZK,WAChB,OACI,yBAAKV,UAAU,iBACX,kBAAC,IAAD,CAAMI,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,SAAT,YACA,uBAAGO,KAAK,yDAAR,gBACA,kBAAC,IAAD,CAAMP,GAAG,UAAT,kBCOGQ,G,KAbY,WACvB,OACI,6BACI,yBAAKZ,UAAU,qBACX,0CACA,+EAEJ,kBAAC,IAAD,CAAMI,GAAG,YAAYJ,UAAU,mCAA/B,OACA,kBAAC,IAAD,CAAMI,GAAG,gBAAgBJ,UAAU,cAAnC,S,yBCSGa,EAhBI,WACf,OACI,6BACI,yBAAKb,UAAU,iBACX,yBAAKC,IAAKa,IAAUX,IAAI,cACxB,+CACA,uNAIJ,kBAAC,IAAD,CAAMC,GAAG,YAAYJ,UAAU,cAA/B,iBCEGe,EAbK,WAChB,OACI,6BACI,yBAAKf,UAAU,qBACX,0CACA,mGAEJ,kBAAC,IAAD,CAAMI,GAAG,YAAYJ,UAAU,mCAA/B,OACA,kBAAC,IAAD,CAAMI,GAAG,kBAAkBJ,UAAU,cAArC,QCKGgB,EAbO,WAClB,OACI,6BACI,yBAAKhB,UAAU,qBACX,0CACA,4GAEJ,kBAAC,IAAD,CAAMI,GAAG,YAAYJ,UAAU,mCAA/B,OACA,kBAAC,IAAD,CAAMI,GAAG,iBAAiBJ,UAAU,cAApC,QCKGgB,EAbO,WAClB,OACI,6BACI,yBAAKhB,UAAU,qBACX,0CACA,8GAEJ,kBAAC,IAAD,CAAMI,GAAG,YAAYJ,UAAU,mCAA/B,OACA,kBAAC,IAAD,CAAMI,GAAG,mBAAmBJ,UAAU,cAAtC,Q,yBCWGiB,EAlBQ,WACnB,OACI,6BACI,yBAAKjB,UAAU,kBACX,yBAAKC,IAAKiB,IAAWf,IAAI,UACzB,wDACA,2KAKA,yFAEJ,kBAAC,IAAD,CAAMC,GAAG,IAAIJ,UAAU,mCAAvB,aCAGa,EAbI,WACf,OACI,6BACI,yBAAKb,UAAU,iBACX,yBAAKC,IAAKa,IAAUX,IAAI,cACxB,qDAEJ,kBAAC,IAAD,CAAMC,GAAG,IAAIJ,UAAU,cAAvB,UCYGmB,G,MArBI,WACf,OACI,6BACI,2CACA,2BACI,4BACI,uGACA,6IAGA,iFACA,yGACA,uHACA,wFACA,6GCqCLC,EAnCO,WAClB,OACI,yBAAKpB,UAAU,cACX,kBAAC,IAAD,CAAMI,GAAG,KACL,qEAGJ,kBAAC,IAAD,CAAMA,GAAG,WAAWJ,UAAU,cAC1B,yBAAKC,IAAKoB,IAAalB,IAAI,aAG/B,kBAAC,IAAD,CAAMC,GAAG,QAAQJ,UAAU,WACvB,yBAAKC,IAAKqB,IAAUnB,IAAI,UAE5B,kBAAC,IAAD,CAAMC,GAAG,QAAQJ,UAAU,WACvB,yBAAKC,IAAKO,IAAUL,IAAI,UAG5B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOoB,UAAWC,EAAgBC,KAAK,aACvC,kBAAC,IAAD,CAAOF,UAAWG,EAAMD,KAAK,UAC7B,kBAAC,IAAD,CAAOF,UAAWI,EAAMF,KAAK,UAC7B,kBAAC,IAAD,CAAOF,UAAWX,EAAoBa,KAAK,yBAC3C,kBAAC,IAAD,CAAOF,UAAWK,EAAgBH,KAAK,cACvC,kBAAC,IAAD,CAAOF,UAAWM,EAAaJ,KAAK,kBACpC,kBAAC,IAAD,CAAOF,UAAWP,EAAeS,KAAK,oBACtC,kBAAC,IAAD,CAAOF,UAAWO,EAAcL,KAAK,mBACrC,kBAAC,IAAD,CAAOF,UAAWN,EAAgBQ,KAAK,qBACvC,kBAAC,IAAD,CAAOF,UAAWQ,EAAcN,KAAK,cACrC,kBAAC,IAAD,CAAOF,UAAWJ,EAAYM,KAAK,cCtBpCO,EAzBE,WACb,IACIC,GADM,IAAIC,MACCC,WAEf,OAAIF,GAAO,IAAMA,EAAO,GAEhB,6CAEFA,GAAQ,IAAMA,EAAO,GAEnB,+CAEFA,GAAQ,IAAMA,EAAO,GAEnB,6CAIA,8C,iBCFGvB,G,MAXK,WAChB,OACI,6BACI,yBAAKT,IAAKmC,IAAUjC,IAAI,cACxB,kBAAC,EAAD,MACA,4EACA,kBAAC,IAAD,CAAMC,GAAG,uBAAuBJ,UAAU,cAA1C,kBCSGqC,MAdf,WACE,OAEI,yBAAKrC,UAAU,OACb,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuB,UAAWe,EAAOC,OAAK,EAACd,KAAK,SCH1Be,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.037d113a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/restart.2f87c726.svg\";","module.exports = __webpack_public_path__ + \"static/media/help.ea9737f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/sick.f25fc45a.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.eab0a4bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear.f7ce95f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/mask.c2816cf1.svg\";","import React from 'react';\nimport '../../App.css';\nimport './restartConfirm.css';\nimport restartIcon from '../../assets/icons/restart.svg';\nimport {Link} from 'react-router-dom';\n\nconst restartConfirm = () => {\n    return(\n        <div className=\"App restartContainer\">\n            <img src={restartIcon} alt=\"Restart Icon\"/>\n            <h1>Are you sure you want to restart?</h1>\n            <p>Any progress will be lost, and you'll have to retake the exam to finish the check-up.</p>\n            <Link to=\"/\">\n            <button className=\"PrimaryBtn\">Yes, Cancel</button>\n            </Link>\n            {/* TODO: Link the button(s) to their respective actions. */}\n            <Link to=\"/\" className=\"PrimaryBtn\" style={{margin: 25}}>Continue</Link>\n        </div>\n       \n    \n    )\n}\n\nexport default restartConfirm;","import React from 'react';\nimport '../../App.css';\nimport './help.css';\nimport HelpIcon from '../../assets/icons/help.svg';\n\n// import {\n//     BrowserRouter as Router,\n//     Link,\n//     Route\n// } from 'react-router-dom';\n\n\nconst helpScreen = () => {\n    return(\n        <div className=\"helpContainer\">\n            <img src={HelpIcon} alt=\"Help Icon\"/>\n            <h1>How can we help you?</h1>\n            {/* TODO: Add route funcitonality to go to respective routes; when button is clicked upon. */}\n            <div className=\"HelpButtons\">\n                <button class=\"PrimaryBtn\">Techincal Issue</button>\n                <button class=\"PrimaryBtn\">Request Accessibility Assistance</button>\n                <button className=\"PrimaryBtn\">Something Else</button>\n            </div>\n        </div>\n    )\n}\n\nexport default helpScreen;","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport './menu.css'\nimport '../../App.css';\n\nconst StartScreen = () => {\n    return(\n        <div className=\"menuContainer\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/help\">Get Help</Link>\n            <a href=\"https://www.github.com/apmcknight/covid-symptom-kiosk\">Report a Bug</a>\n            <Link to=\"/legal\">Disclaimers</Link>\n\n        </div>\n    )\n}\n\nexport default StartScreen;\n","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport './screeningQuestions.css'\nimport '../../App.css';\n\nconst ScreeningQuestions = () =>{\n    return(\n        <div>\n            <div className=\"questionContainer\">\n                <h1>Question 1</h1>\n                <p>Have you been around others or in large crowds?</p>\n            </div>\n            <Link to=\"/positive\" className=\"PrimaryBtn ScreeningMarginRight\" >Yes</Link>\n            <Link to=\"/question-two\" className=\"PrimaryBtn\">No</Link>\n        </div>\n    )\n}\n \nexport default ScreeningQuestions;\n","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport './resultSick.css';\nimport '../../App.css';\nimport SickIcon from '../../assets/icons/sick.svg'\n\nconst ResultSick = () =>{\n    return(\n        <div>\n            <div className=\"sickContainer\">\n                <img src={SickIcon} alt=\"Sick Icon\"/>\n                <h1>You May be Sick</h1>\n                <p>\n                    Please go home, and follow the CDC guidelines. Limit contact with others, wash your hands, and monitor your tempature. For more information, please visit cdc.gov on your mobile phone!\n                </p>\n            </div>\n            <Link to=\"/finished\" className=\"PrimaryBtn\">I'm Leaving</Link>\n        </div>\n        \n    )\n}\n \nexport default ResultSick;\n","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport './screeningQuestions.css'\nimport '../../App.css';\n\nconst QuestionOne = () =>{\n    return(\n        <div>\n            <div className=\"questionContainer\">\n                <h1>Question 2</h1>\n                <p>Do or Have you had a feaver of 98.5 degrees F in the past ten days?</p>\n            </div>\n            <Link to=\"/positive\" className=\"PrimaryBtn ScreeningMarginRight\" >Yes</Link>\n            <Link to=\"/question-three\" className=\"PrimaryBtn\">No</Link>\n        </div>\n    )\n}\n \nexport default QuestionOne;\n","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport './screeningQuestions.css'\nimport '../../App.css';\n\nconst QuestionThree = () =>{\n    return(\n        <div>\n            <div className=\"questionContainer\">\n                <h1>Question 3</h1>\n                <p>Do you or have you had a sudden loss of taste or vision in the past 14 days?</p>\n            </div>\n            <Link to=\"/positive\" className=\"PrimaryBtn ScreeningMarginRight\" >Yes</Link>\n            <Link to=\"/question-four\" className=\"PrimaryBtn\">No</Link>\n        </div>\n    )\n}\n \nexport default QuestionThree;\n","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport './screeningQuestions.css'\nimport '../../App.css';\n\nconst QuestionThree = () =>{\n    return(\n        <div>\n            <div className=\"questionContainer\">\n                <h1>Question 4</h1>\n                <p>Have you had headaches, bodyaches, or otherwise felt I'll in the past 14 days?</p>\n            </div>\n            <Link to=\"/positive\" className=\"PrimaryBtn ScreeningMarginRight\" >Yes</Link>\n            <Link to=\"/clear-screening\" className=\"PrimaryBtn\">No</Link>\n        </div>\n    )\n}\n \nexport default QuestionThree;\n","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport './resultClear.css';\nimport '../../App.css';\nimport ClearIcon from '../../assets/icons/clear.svg'\n\nconst ClearScreening = () =>{\n    return(\n        <div>\n            <div className=\"clearContainer\">\n                <img src={ClearIcon} alt=\"Clear\"/>\n                <h1>You're probably Not Sick</h1>\n                <p>\n                    Based off of the questions, you're likely not sick.\n                    If you do feel like you're getting sick, please leave and follow the \n                    cdc.gov guidelines!\n                </p>\n                <h2>Please, aknoledge that you will leave if you feel ill...</h2>\n            </div>\n            <Link to=\"/\" className=\"PrimaryBtn ScreeningMarginRight\">CONFIRM</Link>\n        </div>\n    )\n}\n \nexport default ClearScreening;\n","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport './SickFinished';\nimport '../../App.css';\nimport SickIcon from '../../assets/icons/sick.svg'\n\nconst ResultSick = () =>{\n    return(\n        <div>\n            <div className=\"sickContainer\">\n                <img src={SickIcon} alt=\"Sick Icon\"/>\n                <h1>Thanks, feel better!</h1>\n            </div>\n            <Link to=\"/\" className=\"PrimaryBtn\">Exit</Link>\n        </div>\n        \n    )\n}\n \nexport default ResultSick;\n","import React from 'react';\nimport './disclaimer.css';\nimport '../../App.css';\n\nconst Disclaimer = () => {\n    return(\n        <div>\n            <h1>Disclaimers</h1>\n            <p>\n                <ol>\n                    <li>This project uses open-source software tools, like: ReactJS, and NodeJS</li>\n                    <li>\n                        The end-user understands that this tool is not 100% accurate in determining if an individual has Coronavirus.\n                    </li>\n                    <li>The software is provided \"AS IS\" without WARRANTY</li>\n                    <li>The software does not obtain and store personal identifiable information.</li>\n                    <li>Adam McKnight, @apmcknight; IS NOT responsible for software modifications beyond source</li>\n                    <li>This project is not funded, and is free, and open-source</li>\n                    <li>This project is not affiliated with a health, or government organization</li>\n                </ol>\n            </p>\n        </div>\n    )\n}\n\nexport default Disclaimer;\n","import React from 'react';\nimport '../../App.css';\nimport './navigationBar.css';\nimport RestartIcon from '../../assets/icons/restart.svg';\nimport HelpIcon from '../../assets/icons/help.svg';\nimport MenuIcon from '../../assets/icons/menu.svg';\nimport {Link, Route, Switch} from 'react-router-dom';\nimport RestartConfirm from '../restartConfirm/restartConfirm';\nimport Help from '../help/help';\nimport Menu from '../menu/menu';\nimport ScreeningQuestions from '../screeningQuestions/screeningQuestions';\nimport PositiveResult from '../resultSick/resultSick';\nimport QuestionTwo from '../screeningQuestions/questionTwo';\nimport QuestionThree from '../screeningQuestions/questionThree';\nimport QuestionFour from '../screeningQuestions/questionFour';\nimport ClearScreening from '../resultClear/resultClear';\nimport SickFinished from '../SickFinished/SickFinished';\nimport Disclaimer from '../disclaimer/disclaimer';\n\n\nconst NavigationBar = () => {\n    return(\n        <div className=\"navigation\">\n            <Link to=\"/\">\n                <h3>COVID SYMPTOM KIOSK &mdash; ALPHA 0.0</h3>\n            </Link>\n\n            <Link to=\"/restart\" className=\"restartBtn\">\n                <img src={RestartIcon} alt=\"Restart\"/>\n            </Link>\n            \n            <Link to=\"/menu\" className=\"menuBtn\" >\n                <img src={MenuIcon} alt=\"Menu\"/>\n            </Link>\n            <Link to=\"/help\" className=\"helpBtn\">\n                <img src={HelpIcon} alt=\"Help\"/>\n            </Link>\n\n            <Switch>\n                <Route component={RestartConfirm} path=\"/restart\"/>\n                <Route component={Help} path=\"/help\"/>\n                <Route component={Menu} path=\"/menu\"/>\n                <Route component={ScreeningQuestions} path=\"/screening-questions\"/>\n                <Route component={PositiveResult} path=\"/positive\"/>\n                <Route component={QuestionTwo} path=\"/question-two\"/>\n                <Route component={QuestionThree} path=\"/question-three\"/>\n                <Route component={QuestionFour} path=\"/question-four\"/>\n                <Route component={ClearScreening} path=\"/clear-screening\"/>\n                <Route component={SickFinished} path=\"/finished\"/>\n                <Route component={Disclaimer} path=\"/legal\"/>\n            </Switch>\n        </div>\n    )\n}\n\nexport default NavigationBar;","import React from 'react';\n\nconst Greeting = () =>{\n    let day = new Date();\n    let hour = day.getHours();\n\n    if (hour >=23 && hour < 11) {\n        return(\n            <h1>Good Morning!</h1>\n        )\n    } if (hour >= 12 && hour < 17) {\n        return(\n            <h1>Good Afternoon!</h1>\n        )\n    } if (hour >= 18 && hour < 24) {\n        return(\n            <h1>Good Evening!</h1>\n        )\n    } else {\n        return(\n            <h1>Hello, There!</h1>\n        )\n    }\n\n\n}\n\nexport default Greeting;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Greeting from '../Greeting';\nimport maskIcon from '../../assets/icons/mask.svg'\nimport './startScreen.css';\nimport '../../App.css';\n\nconst StartScreen = () => {\n    return(\n        <div>\n            <img src={maskIcon} alt=\"Mask Icon\"/>\n            <Greeting/>\n            <p>To get started, click the start button below.</p>\n            <Link to=\"/screening-questions\" className=\"PrimaryBtn\">Start Check</Link>\n        </div>\n    )\n}\n\nexport default StartScreen;\n","import React from 'react';\nimport './App.css';\nimport {Route, Switch} from 'react-router-dom';\nimport Navigation from './components/navigationBar/navigationBar';\nimport Start from './components/startScreen/start';\n\n\n\nfunction App() {\n  return (\n    \n      <div className=\"App\">\n        <Navigation/>\n\n        <Switch>\n          <Route component={Start} exact path=\"/\"/>\n        </Switch>\n\n      </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}